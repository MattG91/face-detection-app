{"version":3,"sources":["components/navigation/Navigation.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/SignIn/SignIn.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","style","display","justifyContent","onClick","className","Logo","options","max","height","width","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","SignIn","id","class","for","name","value","href","FaceRecognition","imageUrl","box","src","alt","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","calculateFaceLoacation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","params","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d02838c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({onRouteChange}) => {\r\n  return (\r\n    <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n      <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css'\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className='ma4 mt0'>\r\n      <Tilt className=\"Tilt\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n        <div className=\"Tilt-inner\"></div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div className=''>\r\n      <p className='f3'>\r\n        {'This Magic Brain will detect faces in your pictures. Give it a try!'}\r\n      </p>\r\n      <div className='center'>\r\n        <div className='form center pa4 br3 shadow-5'>\r\n          <input className='f4 pa2 w-70 center' type='text' onChange={onInputChange} />\r\n          <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' \r\n          type='button' \r\n          onClick={onButtonSubmit}>Detect</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = () => {\r\n  return (\r\n    <div>\r\n      <div className='white f3'>\r\n        {'Matt, your current rank is...'}\r\n      </div>\r\n      <div className='white f1'>\r\n        {'#5'}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\n\r\nconst SignIn = ({onRouteChange}) => {\r\n  return (\r\n    <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n      <main className=\"pa4 black-80\">\r\n          <form className=\"measure\">\r\n          <fieldset id=\"sign_up\" class=\"ba b--transparent ph0 mh0\">\r\n          <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n          <div className=\"mt3\">\r\n            <label className=\"db fw6 lh-copy f6\" for=\"email-address\">Email</label>\r\n            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n          </div>\r\n          <div className=\"mv3\">\r\n            <label className=\"db fw6 lh-copy f6\" for=\"password\">Password</label>\r\n            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n          </div>\r\n          </fieldset>\r\n          <div className=\"\">\r\n            <input \r\n            onClick={() => onRouteChange('home')}\r\n            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n            type=\"submit\"\r\n            value=\"Sign in\"/>\r\n          </div>\r\n          <div className=\"lh-copy mt3\">\r\n            <a href=\"#0\" className=\"f6 link dim black db\">Register</a>\r\n          </div>\r\n        </form>\r\n</main>\r\n</article>\r\n  );\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputImage' src={imageUrl} alt='Maybe a face? Maybe not...' width='500px' height='auto'/>\r\n        <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FaceRecognition;\r\n\r\n// https://samples.clarifai.com/metro-north.jpg","import React, {Component} from 'react';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport SignIn from './components/SignIn/SignIn';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: 'e1ec1b7373784cff8476c74c361b1f78',\n})\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }  \n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n    }\n  }\n\n  calculateFaceLoacation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL,\n      this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLoacation(response))) \n      .catch(err => console.log(err))\n  }\n\n  onRouteChange = (route) => {\n    this.setState({route: route});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n      <Particles className='particles' \n        params={particlesOptions} \n        />\n        <Navigation onRouteChange={this.onRouteChange}/>\n        { this.state.route === 'signin'\n          ? <SignIn onRouteChange={this.onRouteChange}/>\n          : <div><Logo />\n        <Rank />\n        <ImageLinkForm \n        onInputChange={this.onInputChange} \n        onButtonSubmit={this.onButtonSubmit}/>\n        <FaceRecognition \n        imageUrl={this.state.imageUrl}\n        box={this.state.box} />\n        </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}